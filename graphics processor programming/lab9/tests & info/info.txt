OpenMP 1997 г.

Данные могут быть разделяемые и приватные.

Модель исполенения:
        master thread
              |
              v
             fork
              |
              v
      parallel execuiton
              |
              v
             join

OpenMP Team = master + workers
Параллельный регион - блок кода, кот. выполняется всеми потоками одновременно
Параллельные регионы могут быть вложенными, т. е. внутри потока могут быть потоки
Условие/клауза - доп. параметр в параллельной секции

Формат директив OpenMP:
#pragma omp directive [clause[clause]...]
_OPENMP - это макрос, который должен быть определён

Условия:
if/private/shared
firstprivate - всем приватным переменным присваивается значение исходных значений до параллельного региона
lastprivate - переменным присваивается значение того потока, кот. бы последним исполнялся последовательно
default(none|shared)
reduction(операция которую хотим сделать)
nowait - не ждём синхронизации всех потоков в конце

балансировка нагрузки:
#транспонирование матриц
#умножение треугольных матриц
schedule - определяет балансировку нагрузки в размере chunkов.
    Если не указать chunk все потоки выполнят ~n/p итераций, n - длина цикла, P - кол-во потоков
    1) dynamic - фикс порция работы
    2) guided - аналагочино 1, но размер chunkа уменьшается экспоненциально
    3) runtime - определяется переменной окружения

Синхронизация исполнения:
1) barrier - приведёт к явной синхронизации всех потоков
2) критические секции, т. е. секция будет исполнятся только одним потоком

Конструкции распределения работы:
for, section, single